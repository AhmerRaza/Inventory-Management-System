@model IMS.Models.Stock


<!--MODAL HEADER-->
<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
    <h3 class="modal-title">Editing @Html.DisplayFor(model => model.StockName)</h3>
</div>


@using (Html.BeginForm("Create", "Stock", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.StockId)

     <!--MODAL BODY-->
    <div class="modal-body">
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-12 form-group">
                    @Html.LabelFor(model => model.StockName, new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.StockName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.StockName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="col-md-6 form-group">
                    @Html.LabelFor(model => model.StockCategory, new { @class = "control-label bold" })
                    @Html.TextBoxFor(model => model.StockCategory, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.StockCategory, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-6 form-group">
                    @Html.LabelFor(model => model.StockSupplier, new { @class = "control-label bold" })
                    @Html.TextBoxFor(model => model.StockSupplier, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.StockSupplier, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="col-md-6 form-group">
                    @Html.LabelFor(model => model.StockBuyingPrice, new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.StockBuyingPrice, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.StockSellingPrice, " ", new { @class = "text-danger" })
                </div>
                <div class="col-md-6 form-group">
                    @Html.LabelFor(model => model.StockSellingPrice, new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.StockSellingPrice, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.StockSellingPrice, " ", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

        <!--MODAL FOOTER-->
    <div class="modal-footer">
        <input class="btn btn-primary" type="submit" value="Save" />
        <button class="btn btn-warning" data-dismiss="modal">Close</button>
    </div>

}

<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script>
    $("form").removeData("validator");
    $("form").removeData("unobtrusiveValidation");
    $.validator.unobtrusive.parse("form");
</script>

